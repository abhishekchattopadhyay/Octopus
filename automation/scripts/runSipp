#!/usr/bin/expect


#created on 14th March 2018
#@author: Abhishek Chattopadhyay
#FName: refreshBuild
#usage	runSipp <sippIp> <username> <password> <dmaIp> <time <hr> <min> <sec>> <rate> <holdTime> <tcName> <1/2> <failureRate> <monitor delay>
#expect script

set timeout 60
set prompt "root@sipp?*"
set sippIp	 [lindex $argv 0]
set dmaIp	 [lindex $argv 3]
set timeInHr [lindex $argv 4]
set timeInMi [lindex $argv 5]
set timeInSe [lindex $argv 6]
set rate	 [lindex $argv 7]
set holdTime [lindex $argv 8]
set tcName	 [lindex $argv 9]
set TcOpt	 [lindex $argv 10]
set fr		 [lindex $argv 11]
set monitorDelay	[lindex $argv 12]

spawn ssh [lindex $argv 1]@[lindex $argv 0]

expect "yes/no" { 
	send "yes\r"
	expect "*?assword" { send "[lindex $argv 2]\r" }
	} "*?assword" { send "[lindex $argv 2]\r" }

# we are in the sipp machine now: 
#Run the analyzer now
### 
expect $prompt { send "cd ./hpr-client-load5/\r"}
expect $prompt { send "touch $tcName\r"}
expect $prompt { send "ls -larth\r" }
expect $prompt { send "./failCheck.sh $tcName $fr $monitorDelay > /dev/null 2>&1 \r" }
expect $prompt { send "sleep 10\r" }
#Run sipp  with arguments
expect $prompt { send "./runSipp.sh $sippIp $dmaIp $timeInHr $timeInMi $timeInSe $rate $holdTime $tcName $TcOpt > /dev/null 2>&1\r" }
expect $prompt { send "exit\r" }
#expect  $prompt { send "nohup ./runner.sh $sippIp $dmaIp $timeInHr $timeInMi $timeInSe $rate $holdTime $tcName $TcOpt &\r" }






#----------------Not useful----------------
#expect $prompt { send "su - [lindex $argv 3]\r" }
#expect $prompt { send scp BuildDownloader.py [lindex $argv 1]@[lindex $argv 0]\r}
#expect $prompt { send  $root\r }
#expect "Password: " { send "[lindex $argv 4]\r" }
#expect "Password: " { send $rootPass\r }
#expect $prompt { send "/salt/bin/python /tmp/refreshBuild.py\r" }
#expect $prompt { send "touch /tmp/ok\r" }
#expect $prompt { send "mount -o remount,rw /data\r" }
#expect $prompt { send "mv /output/RMX_*.bin /data\r" }
#expect $prompt { send "ln -sf /data/
#expect "root@sipp?*" { send "ll\r" }
#expect $prompt { send "ls \r" }
#expect $prompt {send "nohup ./modified_failure_rate.sh $tcName $fr $monitorDelay > $tcName &\r" }

interact
